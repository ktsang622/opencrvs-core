apiVersion: v1
kind: Service
metadata:
  labels:
    app: dashboards
  name: dashboards
spec:
  ports:
    - port: 4444
      targetPort: 4444
  selector:
    app: config
  type: LoadBalancer
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: dashboards-route
spec:
  entryPoints:
    - websecure
  routes:
  - match: 'Host(`metabase.{{ .Values.hostname }}`)'
    kind: Rule
    services:
    - name: dashboards
      namespace: opencrvs-services-dev
      port: 4444
    middlewares:
      - name: sts-and-basic-response-headers
  tls:
    certResolver: myresolver
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dashboards
  name: dashboards
spec:
  replicas: {{ .Values.dashboards.replicas }}
  selector:
    matchLabels:
      app: dashboards
  template:
    metadata:
      labels:
        app: dashboards
    spec:
      containers:
        - name: dashboards
          image: "opencrvs/ocrvs-dashboards:{{ .Values.image.tag }}"
          command: ["/bin/sh", "/run-dev.sh"] # FIXME: make generic and provide run-dev.sh as args, not overwriting entrypoint
      restartPolicy: Always
